openapi: '3.0.1'

info:
  title: 'immutableentity'
  version: 0.0.1

servers:
  - url: http://localhost:8080
    description: Development server

paths:
  /api/examples:
    get:
      description: List Examples
      operationId: listExamples
      tags:
        - Example
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/SizeParam'
      responses:
        '200':
          description: Ok
          content:
            application/vnd.appkr.private.v1+json:
              schema:
                $ref: '#/components/schemas/ExampleList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/exceptions:
    get:
      description: Test Exceptions
      operationId: getException
      tags:
        - Example
      parameters:
        - name: type
          in: query
          schema:
            type: string
            enum:
              - ServerError
              - NoSuchElement
      responses:
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/ServerError'

  /api/contracts:
    post:
      description: 계약 등록
      operationId: createContract
      tags:
        - Contract
      requestBody:
        content:
          application/vnd.appkr.private.v1+json:
            schema:
              $ref: '#/components/schemas/Contract'
      responses:
        '201':
          $ref: '#/components/responses/Created'

  /api/contracts/{contractId}:
    parameters:
      - $ref: '#/components/parameters/ContractIdParam'

    get:
      description: 계약 조회
      operationId: getContract
      tags:
        - Contract
      responses:
        '200':
          description: Ok
          content:
            application/vnd.appkr.private.v1+json:
              schema:
                $ref: '#/components/schemas/Contract'

    put:
      description: 계약 변경
      operationId: updateContract
      tags:
        - Contract
      requestBody:
        content:
          application/vnd.appkr.private.v1+json:
            schema:
              $ref: '#/components/schemas/Contract'
      responses:
        '204':
          $ref: '#/components/responses/NoContent'

  /api/contracts/{contractId}/change-logs:
    parameters:
      - $ref: '#/components/parameters/ContractIdParam'

    get:
      description: 계약 변경 이력 조회
      operationId: getContractChangeLogs
      tags:
        - Contract
      responses:
        '200':
          description: Ok
          content:
            application/vnd.appkr.private.v1+json:
              schema:
                $ref: '#/components/schemas/ContractList'

components:
  schemas:

    #----------------------------------------
    # API fields
    #----------------------------------------

    LongId:
      type: integer
      format: int64
      example: 1

    DateTime:
      type: string
      format: date-time
      example: "2018-12-01T10:00:00Z"

    String:
      type: string
      example: "foo"

    UUID:
      type: string
      format: uuid
      example: c9106593-2d6c-40eb-8504-66b0ef41ad2d

    #----------------------------------------
    # Common Model
    #----------------------------------------

    LongArray:
      type: object
      properties:
        ids:
          type: array
          items:
            $ref: '#/components/schemas/LongId'

    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          format: uri
          example: immutableentity/constraint-violation
        title:
          type: string
          example: 제출한 요청이 유효하지 않습니다
        detail:
          type: string
        fieldErrors:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/FieldError'

    FieldError:
      type: object
      properties:
        field:
          type: string
        message:
          $ref: '#/components/schemas/ErrorCode'

    ErrorCode:
      type: string
      example:
        - NotNull
        - Size

    Page:
      type: object
      properties:
        size:
          type: integer
          format: int32
          default: 20
          example: 20
        totalElements:
          type: integer
          format: int64
          example: 100
        totalPages:
          type: integer
          format: int32
          example: 5
        number:
          type: integer
          format: int32
          default: 1
          example: 1

    #----------------------------------------
    # API Model
    #----------------------------------------

    Example:
      type: object
      properties:
        exampleId:
          $ref: '#/components/schemas/LongId'
        title:
          $ref: '#/components/schemas/String'
        createdAt:
          $ref: '#/components/schemas/DateTime'
        updatedAt:
          $ref: '#/components/schemas/DateTime'
        createdBy:
          $ref: '#/components/schemas/String'
        updatedBy:
          $ref: '#/components/schemas/String'

    ExampleList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Example'
        page:
          $ref: '#/components/schemas/Page'

    ContractList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Contract'

    Contract:
      type: object
      properties:
        contractId:
          $ref: '#/components/schemas/UUID'
        status:
          $ref: '#/components/schemas/ContractStatus'
        validThrough:
          $ref: '#/components/schemas/EndlessDateRange'
        pricingPlan:
          $ref: '#/components/schemas/PricingPlan'

    PricingPlan:
      type: object
      properties:
        pricingPlanId:
          $ref: '#/components/schemas/UUID'
        contractId:
          $ref: '#/components/schemas/UUID'
        bin:
          type: array
          items:
            $ref: '#/components/schemas/DistanceRangePricingElement'

    EndlessDateRange:
      type: object
      properties:
        from:
          $ref: '#/components/schemas/DateTime'
        to:
          type: string
          format: date-time
          nullable: true
          example: '2099-12-31T23:59:59+09:00'

    ContractStatus:
      description: |
        - DRAFT: 임시저장
        - EFFECTIVE: 적용중
        - TERMINATED: 종료/해지
      type: string
      enum:
        - DRAFT
        - PENDING_APPROVAL
        - APPROVED
        - EFFECTIVE
        - TERMINATED
      example: DRAFT

    DistanceRangePricingElement:
      type: object
      properties:
        from:
          $ref: '#/components/schemas/Distance'
        to:
          $ref: '#/components/schemas/Distance'
        step:
          $ref: '#/components/schemas/Distance'
        pricePerStep:
          $ref: '#/components/schemas/Money'

    Distance:
      type: object
      properties:
        value:
          $ref: '#/components/schemas/DecimalNumber'

    DecimalNumber:
      type: string
      example: 1.0

    Money:
      type: integer
      format: int64
      example: 10000

  parameters:

    PageParam:
      in: query
      name: page
      schema:
        type: integer
        format: int32
        default: 1

    SizeParam:
      in: query
      name: size
      schema:
        type: integer
        format: int32
        default: 10

    ContractIdParam:
      in: path
      name: contractId
      schema:
        $ref: '#/components/schemas/UUID'
      required: true

  responses:

    Created:
      description: Created

    Accepted:
      description: Accepted

    NoContent:
      description: No Content

    EmptyContent:
      description: No Content
      content:
        application/vnd.appkr.private.v1+json: { }

    BadRequest:
      description: Bad Request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'

    Unauthorized:
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'

    Forbidden:
      description: Forbidden
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'

    NotFound:
      description: Not Found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'

    Conflict:
      description: Conflict
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'

    ServerError:
      description: Internal Server Error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'

  securitySchemes:
    'jhipster-uaa':
      type: oauth2
      flows:
        password:
          tokenUrl: http://localhost:9999/uaa/oauth/token
          refreshUrl: http://localhost:9999/uaa/oauth/token
          scopes: {}
        clientCredentials:
          tokenUrl: http://localhost:9999/uaa/oauth/token
          scopes: {}

security:
  - jhipster-uaa: []
